install.packages("pacman") # command return to run a line of code
pacman::p_load(haven, readr, dplyr, openxlsx)
lab1_csv <-
read_csv(
"https://github.com/kijohnson/Advanced-Data-Analysis/raw/refs/heads/main/Class%201%20Survey%20Fall%202025%202.csv"
)
dim(lab1_csv)
dim(lab1_csv)
lab1_csv <- lab1_csv %>%
rename_with(~ c(
"id", "like_cats", "like_dogs", "have_desert", "slogan",
"fav_day", "larkORowl", "fav_food", "fav_drink", "fav_season",
"fav_month", "hobby", "program", "specialization", "stat_software",
"R_exp", "coding_comfort", "coding_length", "top_three",
"public_health_interest", "fav_num", "bday", "bmonth",
"country", "state", "city", "highest_educ_level"
))
names(lab1_csv)
sapply(lab1_csv, class) |>
table()
table(lab1_csv$bday, useNA = "ifany")
table(lab1_csv$bmonth, useNA = "ifany")
# Making sure all data is in numeric form
month_map <- c(
"January" = 1,  "February" = 2,  "March" = 3,     "April" = 4,
"May" = 5,      "June" = 6,      "July" = 7,      "August" = 8,
"September" = 9,"October" = 10,  "November" = 11, "December" = 12
)
lab1_csv$bmonth <- ifelse(
lab1_csv$bmonth %in% names(month_map),
month_map[lab1_csv$bmonth],  # replace with corresponding number
lab1_csv$bmonth              # leave other values as-is (numbers or NA)
)
lab1_csv$bmonth <- as.numeric(trimws(lab1_csv$bmonth))
# Convert UVs to NAs
# Bday valid range = 1–31
lab1_csv$bday[ lab1_csv$bday < 1 | lab1_csv$bday > 31 ] <- NA
# Bmonth valid range = 1–12
lab1_csv$bmonth[ lab1_csv$bmonth < 1 | lab1_csv$bmonth > 12 ] <- NA
# Change to numeric
lab1_csv$bday <- as.numeric(lab1_csv$bday)
lab1_csv$bmonth <- as.numeric(lab1_csv$bmonth)
# Medians (TRUE ignores NAs)
median(lab1_csv$bday, na.rm = TRUE)
median(lab1_csv$bmonth, na.rm = TRUE)
lab1_csv$bseason <- with(lab1_csv,
ifelse(bmonth %in% c(12, 1, 2), "Winter",
ifelse(bmonth %in% c(3, 4, 5), "Spring",
ifelse(bmonth %in% c(6, 7, 8), "Summer",
ifelse(bmonth %in% c(9, 10, 11), "Fall", NA)))))
season_table <- table(lab1_csv$bmonth, lab1_csv$bseason)
print(season_table)
season_table_with_sums <- addmargins(season_table)
print(season_table_with_sums)
# Making sure all data is in numeric form (also accounting for mispelling)
month_map <- c(
"January" = 1,  "February" = 2,  "March" = 3,     "April" = 4,
"May" = 5,      "June" = 6, "june"= 6,    "July" = 7,      "August" = 8,
"September" = 9,"Septemeber" = 9, October" = 10,  "November" = 11, "December" = 12,
# Making sure all data is in numeric form (also accounting for mispelling)
month_map <- c(
"January" = 1, "February" = 2, "March" = 3, "April" = 4,
"May" = 5, "June" = 6, "june" = 6, "July" = 7, "August" = 8,
"September" = 9, "Septemeber" = 9, "October" = 10,
"November" = 11, "December" = 12
)
lab1_csv$bmonth <- ifelse(
lab1_csv$bmonth %in% names(month_map),
month_map[lab1_csv$bmonth],  # replace with corresponding number
lab1_csv$bmonth              # leave other values as-is (numbers or NA)
)
lab1_csv$bmonth <- as.numeric(trimws(lab1_csv$bmonth))
# Convert UVs to NAs
# Bday valid range = 1–31
lab1_csv$bday[ lab1_csv$bday < 1 | lab1_csv$bday > 31 ] <- NA
# Bmonth valid range = 1–12
lab1_csv$bmonth[ lab1_csv$bmonth < 1 | lab1_csv$bmonth > 12 ] <- NA
# Change to numeric
lab1_csv$bday <- as.numeric(lab1_csv$bday)
lab1_csv$bmonth <- as.numeric(lab1_csv$bmonth)
# Medians (TRUE ignores NAs)
median(lab1_csv$bday, na.rm = TRUE)
median(lab1_csv$bmonth, na.rm = TRUE)
# Making sure all data is in numeric form (also accounting for mispelling)
month_map <- c(
"January" = 1, "February" = 2, "March" = 3, "April" = 4,
"May" = 5, "June" = 6, "june" = 6, "July" = 7, "August" = 8,
"September" = 9, "Septemeber" = 9, "October" = 10,
"November" = 11, "December" = 12
)
lab1_csv$bmonth <- ifelse(
lab1_csv$bmonth %in% names(month_map),
month_map[lab1_csv$bmonth],  # replace with corresponding number
lab1_csv$bmonth              # leave other values as-is (numbers or NA)
)
lab1_csv$bmonth <- as.numeric(trimws(lab1_csv$bmonth))
# Convert UVs to NAs
# Bday valid range = 1–31
lab1_csv$bday[ lab1_csv$bday < 1 | lab1_csv$bday > 31 ] <- NA
# Bmonth valid range = 1–12
lab1_csv$bmonth[ lab1_csv$bmonth < 1 | lab1_csv$bmonth > 12 ] <- NA
install.packages("pacman") # command return to run a line of code
pacman::p_load(haven, readr, dplyr, openxlsx)
lab1_csv <-
read_csv(
"https://github.com/kijohnson/Advanced-Data-Analysis/raw/refs/heads/main/Class%201%20Survey%20Fall%202025%202.csv"
)
dim(lab1_csv)
dim(lab1_csv)
lab1_csv <- lab1_csv %>%
rename_with(~ c(
"id", "like_cats", "like_dogs", "have_desert", "slogan",
"fav_day", "larkORowl", "fav_food", "fav_drink", "fav_season",
"fav_month", "hobby", "program", "specialization", "stat_software",
"R_exp", "coding_comfort", "coding_length", "top_three",
"public_health_interest", "fav_num", "bday", "bmonth",
"country", "state", "city", "highest_educ_level"
))
names(lab1_csv)
sapply(lab1_csv, class) |>
table()
table(lab1_csv$bday, useNA = "ifany")
table(lab1_csv$bmonth, useNA = "ifany")
# Making sure all data is in numeric form (also accounting for mispelling)
month_map <- c(
"January" = 1, "February" = 2, "March" = 3, "April" = 4,
"May" = 5, "June" = 6, "june" = 6, "July" = 7, "August" = 8,
"September" = 9, "Septemeber" = 9, "October" = 10,
"November" = 11, "December" = 12
)
lab1_csv$bmonth <- ifelse(
lab1_csv$bmonth %in% names(month_map),
month_map[lab1_csv$bmonth],  # replace with corresponding number
lab1_csv$bmonth              # leave other values as-is (numbers or NA)
)
lab1_csv$bmonth <- as.numeric(trimws(lab1_csv$bmonth))
# Convert UVs to NAs
# Bday valid range = 1–31
lab1_csv$bday[ lab1_csv$bday < 1 | lab1_csv$bday > 31 ] <- NA
# Bmonth valid range = 1–12
lab1_csv$bmonth[ lab1_csv$bmonth < 1 | lab1_csv$bmonth > 12 ] <- NA
# Change to numeric
lab1_csv$bday <- as.numeric(lab1_csv$bday)
lab1_csv$bmonth <- as.numeric(lab1_csv$bmonth)
# Medians (TRUE ignores NAs)
median(lab1_csv$bday, na.rm = TRUE)
median(lab1_csv$bmonth, na.rm = TRUE)
lab1_csv$bseason <- with(lab1_csv,
ifelse(bmonth %in% c(12, 1, 2), "Winter",
ifelse(bmonth %in% c(3, 4, 5), "Spring",
ifelse(bmonth %in% c(6, 7, 8), "Summer",
ifelse(bmonth %in% c(9, 10, 11), "Fall", NA)))))
season_table <- table(lab1_csv$bmonth, lab1_csv$bseason)
print(season_table)
season_table_with_sums <- addmargins(season_table)
print(season_table_with_sums)
# Making sure all data is in numeric form (also accounting for mispelling)
month_map <- c(
"January" = 1, "February" = 2, "March" = 3, "April" = 4,
"May" = 5, "June" = 6, "june" = 6, "July" = 7, "August" = 8,
"September" = 9, "Septemeber" = 9, "October" = 10,
"November" = 11, "December" = 12
)
lab1_csv$bmonth <- ifelse(
lab1_csv$bmonth %in% names(month_map),
month_map[lab1_csv$bmonth],  # replace with corresponding number
lab1_csv$bmonth              # leave other values as-is (numbers or NA)
)
lab1_csv$bmonth <- as.numeric(trimws(lab1_csv$bmonth))
# Convert UVs to NAs
# Bday valid range = 1–31
lab1_csv$bday[ lab1_csv$bday < 1 | lab1_csv$bday > 31 ] <- NA
# Bmonth valid range = 1–12
lab1_csv$bmonth[ lab1_csv$bmonth < 1 | lab1_csv$bmonth > 12 ] <- NA
# Change to numeric
lab1_csv$bday <- as.numeric(lab1_csv$bday)
lab1_csv$bmonth <- as.numeric(lab1_csv$bmonth)
# Medians (TRUE ignores NAs)
median(lab1_csv$bday, na.rm = TRUE)
median(lab1_csv$bmonth, na.rm = TRUE)
lab1_csv$bseason <- with(lab1_csv,
ifelse(bmonth %in% c(12, 1, 2), "Winter",
ifelse(bmonth %in% c(3, 4, 5), "Spring",
ifelse(bmonth %in% c(6, 7, 8), "Summer",
ifelse(bmonth %in% c(9, 10, 11), "Fall", NA)))))
season_table <- table(lab1_csv$bmonth, lab1_csv$bseason)
print(season_table)
season_table_with_sums <- addmargins(season_table)
print(season_table_with_sums)
#count up how many times each number appears
fav_num_counts <- table(df$fav_num)
install.packages("pacman") # command return to run a line of code
pacman::p_load(haven, readr, dplyr, openxlsx)
lab1_csv <-
read_csv(
"https://github.com/kijohnson/Advanced-Data-Analysis/raw/refs/heads/main/Class%201%20Survey%20Fall%202025%202.csv"
)
dim(lab1_csv)
dim(lab1_csv)
lab1_csv <- lab1_csv %>%
rename_with(~ c(
"id", "like_cats", "like_dogs", "have_desert", "slogan",
"fav_day", "larkORowl", "fav_food", "fav_drink", "fav_season",
"fav_month", "hobby", "program", "specialization", "stat_software",
"R_exp", "coding_comfort", "coding_length", "top_three",
"public_health_interest", "fav_num", "bday", "bmonth",
"country", "state", "city", "highest_educ_level"
))
names(lab1_csv)
sapply(lab1_csv, class) |>
table()
table(lab1_csv$bday, useNA = "ifany")
table(lab1_csv$bmonth, useNA = "ifany")
# Making sure all data is in numeric form (also accounting for mispelling)
month_map <- c(
"January" = 1, "February" = 2, "March" = 3, "April" = 4,
"May" = 5, "June" = 6, "june" = 6, "July" = 7, "August" = 8,
"September" = 9, "Septemeber" = 9, "October" = 10,
"November" = 11, "December" = 12
)
lab1_csv$bmonth <- ifelse(
lab1_csv$bmonth %in% names(month_map),
month_map[lab1_csv$bmonth],  # replace with corresponding number
lab1_csv$bmonth              # leave other values as-is (numbers or NA)
)
lab1_csv$bmonth <- as.numeric(trimws(lab1_csv$bmonth))
# Convert UVs to NAs
# Bday valid range = 1–31
lab1_csv$bday[ lab1_csv$bday < 1 | lab1_csv$bday > 31 ] <- NA
# Bmonth valid range = 1–12
lab1_csv$bmonth[ lab1_csv$bmonth < 1 | lab1_csv$bmonth > 12 ] <- NA
# Change to numeric
lab1_csv$bday <- as.numeric(lab1_csv$bday)
lab1_csv$bmonth <- as.numeric(lab1_csv$bmonth)
# Medians (TRUE ignores NAs)
median(lab1_csv$bday, na.rm = TRUE)
median(lab1_csv$bmonth, na.rm = TRUE)
lab1_csv$bseason <- with(lab1_csv,
ifelse(bmonth %in% c(12, 1, 2), "Winter",
ifelse(bmonth %in% c(3, 4, 5), "Spring",
ifelse(bmonth %in% c(6, 7, 8), "Summer",
ifelse(bmonth %in% c(9, 10, 11), "Fall", NA)))))
season_table <- table(lab1_csv$bmonth, lab1_csv$bseason)
print(season_table)
season_table_with_sums <- addmargins(season_table)
print(season_table_with_sums)
#count up how many times each number appears
fav_num_counts <- table(df$fav_num)
#count up how many times each number appears
fav_num_counts <- table(lab1_csv$fav_num)
print(fav_num_counts)
#max number count is class favorite
favorite_number <- as.numeric(names(fav_counts)[which.max(fav_counts)])
#count up how many times each number appears
fav_num_counts <- table(lab1_csv$fav_num)
print(fav_num_counts)
#number with highest count is our class' favorite
#max number count is class favorite
favorite_number <- as.numeric(names(fav_counts)[which.max(fav_counts)])
#max number count is class favorite
favorite_number <- as.numeric(names(fav_num_counts)[which.max(fav_num_counts)])
cat("The class's favorite number is:", favorite_number, "\n")
